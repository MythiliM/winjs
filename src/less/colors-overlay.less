// Copyright (c) Microsoft Open Technologies, Inc.  All Rights Reserved. Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.
#win-overlay {
    .variableDefs(dark) {
        @accentColor: #0078D7;
        @borderColor:rgb(255, 255, 255);
        @textColor:rgb(255, 255, 255);
        @textColorDisabled: rgba(255, 255, 255, 0.4);
        @separatorBackgroundColor: rgb(123, 123, 123);
        @appbarBackgroundColor: rgb(0, 0, 0);
        @appbarBorderColor: rgb(0, 0, 0);
        @appbarEllipsisHoverBackgroundColor: rgba(255, 255, 255, 0.13);
        @invokeButtonHoverBackgroundColor: rgba(255, 255, 255, 0.13);
        @commandHoverBackgroundColor: rgb(85, 85, 85);
        @commandActiveBackgroundColor: rgb(128, 128, 128);
        @flyoutBorderColor: rgb(255, 255, 255);
        @flyoutBackgroundColor: rgb(0, 0, 0);
        @menuCommandFocusBackgroundColor: rgb(222, 222, 222);
        @menuCommandActiveBackgroundColor: rgb(255, 255, 255);
        @menuCommandDisabledColor: rgba(255, 255, 255, 0.1);
        @menuBackgroundColor: rgb(255, 255, 255);
        @settingsFlyoutBackgroundColor: rgb(255, 255, 255);
        @settingsFlyoutBackgroundColorDark: rgb(0, 0, 0);
        @settingsFlyoutBorderColor: rgba(255, 255, 255, 0.24);
        @settingsFlyoutHeaderBackgroundColor: rgb(0, 0, 0);
        @settingsFlyoutHeaderBackgroundColorLight: rgb(255, 255, 255);
    }

    .variableDefs(light) {
        @accentColor: #0078D7;
        @borderColor:rgb(0, 0, 0);
        @textColor:rgb(0, 0, 0);
        @textColorDisabled: rgba(0, 0, 0, 0.4);
        @separatorBackgroundColor: rgb(123, 123, 123);
        @appbarBackgroundColor: rgb(240, 240, 240);
        @appbarBorderColor: rgb(240, 240, 240);
        @appbarEllipsisHoverBackgroundColor: rgba(205, 205, 205, 0.82);
        @invokeButtonHoverBackgroundColor: rgba(205, 205, 205, 0.82);
        @commandHoverBackgroundColor: rgb(184, 184, 184);
        @commandActiveBackgroundColor: rgb(138, 138, 138);
        @flyoutBorderColor: rgb(0, 0, 0);
        @flyoutBackgroundColor: rgb(255, 255, 255);
        @menuCommandFocusBackgroundColor: rgb(222, 222, 222);
        @menuCommandActiveBackgroundColor: rgb(0, 0, 0);
        @menuCommandDisabledColor: rgba(0, 0, 0, 0.1);
        @menuBackgroundColor: rgb(0, 0, 0);
        @settingsFlyoutBackgroundColor: rgb(255, 255, 255);
        @settingsFlyoutBackgroundColorDark: rgb(0, 0, 0);
        @settingsFlyoutBorderColor: rgba(0, 0, 0, 0.24);
        @settingsFlyoutHeaderBackgroundColor: rgb(0, 0, 0);
        @settingsFlyoutHeaderBackgroundColorLight: rgb(255, 255, 255);
    }

    .variableDefs(highcontrast) {
        @accentColor: #0078D7;
        @borderColor:rgb(0, 0, 0);
        @textColor:rgb(0, 0, 0);
        @textColorDisabled: rgba(0, 0, 0, 0.4);
        @separatorBackgroundColor: rgb(123, 123, 123);
        @appbarBackgroundColor: rgb(240, 240, 240);
        @appbarBorderColor: rgb(240, 240, 240);
        @appbarEllipsisHoverBackgroundColor: rgba(205, 205, 205, 0.82);
        @invokeButtonHoverBackgroundColor: rgba(205, 205, 205, 0.82);
        @commandHoverBackgroundColor: rgb(184, 184, 184);
        @commandActiveBackgroundColor: rgb(138, 138, 138);
        @flyoutBorderColor: rgb(0, 0, 0);
        @flyoutBackgroundColor: rgb(255, 255, 255);
        @menuCommandFocusBackgroundColor: rgb(222, 222, 222);
        @menuCommandActiveBackgroundColor: rgb(0, 0, 0);
        @menuCommandDisabledColor: rgba(0, 0, 0, 0.1);
        @menuBackgroundColor: rgb(0, 0, 0);
        @settingsFlyoutBackgroundColor: rgb(255, 255, 255);
        @settingsFlyoutBackgroundColorDark: rgb(0, 0, 0);
        @settingsFlyoutBorderColor: rgba(0, 0, 0, 0.24);
        @settingsFlyoutHeaderBackgroundColor: rgb(0, 0, 0);
        @settingsFlyoutHeaderBackgroundColorLight: rgb(255, 255, 255);
    }

    .stylesForTheme(@theme) {

        #win-overlay > .variableDefs(@theme);

        .win-overlay {
            outline: none;
        }

        /* Command colors */
        hr.win-command {
            background-color: @separatorBackgroundColor;
        }


        button:enabled.win-command:focus,
        div.win-command:focus,
        button:enabled.win-command.win-command:hover:focus,
        div.win-command.win-command:hover:focus {
            border-color: @borderColor;
        }
        .win-commandimage {
            color: @textColor;
        }
        button:disabled .win-commandimage,
        button:disabled:active .win-commandimage {
            color: @textColorDisabled;
        }

        button[aria-checked=true]:enabled:hover:active .win-commandimage.win-commandimage {
            color: @textColor;
        }
        button[aria-checked=true]:-ms-keyboard-active .win-commandimage {
            color: @textColor;
        }

        button[aria-checked=true].win-command:after {
            position: absolute;
            height: 100%;
            width: 100%;
            background-color: @accentColor;
            content: "";
            top:0;
            left:0;
            z-index: -1;
            opacity:0.7;
        }

        button.win-command:enabled:-ms-keyboard-active {
            background-color: @commandActiveBackgroundColor;
            color: @textColor;
        }

        button.win-command:disabled .win-label,
        button.win-command:disabled:active .win-label {
            color: @textColorDisabled;
        }

        &.win-appbar, .win-appbar {
            background-color: @appbarBackgroundColor;
            border-color: @appbarBorderColor;

            &.win-menulayout {
                .win-toolbar {
                    background-color: @appbarBackgroundColor;
                }
            }

            button.win-appbar-invokebutton.win-appbar-invokebutton {
                background-color: transparent;

                .win-appbar-ellipsis {
                    border-color: transparent;
                }

                &:enabled {
                    &:-ms-keyboard-active {
                        // Override intrinsic button element styles
                        background-color: transparent;
                    }

                    .win-appbar-ellipsis {
                        color: @textColor;
                    }

                    &:focus .win-appbar-ellipsis {
                        border-color: @borderColor;
                    }
                }

                &:disabled {
                    &:active, &:hover:active {
                        background-color: transparent;
                    }

                    .win-appbar-ellipsis {
                        color: @textColorDisabled;
                    }
                }
            }
            // When the AppBar is hiding or hidden, the entire invokebutton has a hover background.
            &.win-appbar-hiding, &.win-appbar-hidden {
                button.win-appbar-invokebutton.win-appbar-invokebutton {
                    &:enabled {
                        &:hover:active {
                            background-color: @invokeButtonHoverBackgroundColor;
                        }
                    }
                }
            }

            &.win-appbar-hiding.win-menulayout {
                button.win-appbar-invokebutton.win-appbar-invokebutton {
                    &:enabled {
                        &:hover:active {
                            background-color: transparent;
                        }
                    }
                }
            }
        }

        &.win-flyout, .win-flyout {
            border-color: @flyoutBorderColor;
            background-color: @flyoutBackgroundColor;
        }

        .win-settingsflyout {
            background-color: @settingsFlyoutBackgroundColor;
        }
        .win-settingsflyout.win-ui-dark {
            background-color: @settingsFlyoutBackgroundColorDark;
        }

        &.win-settingsflyout, .win-settingsflyout {
            border-color: @settingsFlyoutBorderColor;
        }

        &.win-menu button, .win-menu button {
            background-color: transparent;
            color: @textColor;
        }

        &.win-menu button[aria-checked=true].win-command:after,
        .win-menu button[aria-checked=true].win-command:after {
            background-color: transparent;
        }
        &.win-menu.win-menu button.win-command:enabled:focus, .win-menu.win-menu button.win-command:enabled:focus,
        &.win-menu.win-menu button.win-command:enabled:active, .win-menu.win-menu button.win-command:enabled:active {
            background-color: @menuCommandFocusBackgroundColor;
        }
        &.win-menu.win-menu button.win-command:enabled:hover:active, .win-menu.win-menu button.win-command:enabled:hover:active {
            background-color: @menuBackgroundColor;
        }
        &.win-menu.win-menu button.win-command:enabled:-ms-keyboard-active, .win-menu.win-menu button.win-command:enabled:-ms-keyboard-active {
            background-color: @menuCommandActiveBackgroundColor;
        }
        &.win-menu button:disabled, .win-menu button:disabled,
        &.win-menu button:disabled:active, .win-menu button:disabled:active {
            background-color: transparent;
            color: @menuCommandDisabledColor;
        }

        /*
        Settings flyout will be white in dark theme so we need to have the header stay
        aligned with the theme unless the app explicitly overrides it.
        */
        .win-settingsflyout .win-header {
            background-color: @settingsFlyoutHeaderBackgroundColor;
        }
        .win-settingsflyout .win-header.win-ui-light {
            background-color: @settingsFlyoutHeaderBackgroundColor;
        }

        /*
        win-hide-focus needs the qualifier for win-ui-light or dark,
        otherwise .win-ui-dark button.win-command:focus is more
        qualified and stomps on the transparent that doesn't have .win-ui-dark
        */
        &.win-command:enabled.win-hidefocus:focus,
        .win-command:enabled.win-hidefocus:focus,
        &.win-command.win-command:enabled.win-hidefocus:hover:focus,
        .win-command.win-command:enabled.win-hidefocus:hover:focus,
        &.win-appbar button.win-appbar-invokebutton:enabled.win-hidefocus:focus .win-appbar-ellipsis,
        .win-appbar button.win-appbar-invokebutton:enabled.win-hidefocus:focus .win-appbar-ellipsis {
            border-color: transparent;
        }
    }

    .stylesForThemeHover(@theme) {

        #win-overlay > .variableDefs(@theme);

        /* Appbar control colors */
        &.win-appbar, .win-appbar {
            button.win-appbar-invokebutton {
                &:enabled {
                    &:hover {
                        // Override intrinsic button element styles
                        background-color: transparent;
                    }
                }

                &:disabled {
                    &:hover {
                        background-color: transparent;
                    }
                }
            }
            // When the AppBar is showing or shown, only the ellipsis has a hover background.*/
            &.win-appbar-showing, &.win-appbar-shown {
                button.win-appbar-invokebutton {
                    &:enabled {
                        &:hover {
                            .win-appbar-ellipsis {
                                background-color: @appbarEllipsisHoverBackgroundColor;
                            }
                        }
                    }
                }
            }
            // When the AppBar is hiding or hidden, the entire invokebutton has a hover background.
            &.win-appbar-hiding, &.win-appbar-hidden {
                button.win-appbar-invokebutton {
                    &:enabled {
                        &:hover {
                            background-color: @appbarEllipsisHoverBackgroundColor;
                        }
                    }
                }
            }
        }

        &.win-appbar.win-menulayout.win-appbar-hiding, .win-appbar.win-menulayout.win-appbar-hiding {
            &.win-appbar-hiding, &.win-appbar-hidden {
                button.win-appbar-invokebutton {
                    &:enabled {
                        &:hover {
                            background-color: transparent;
                        }
                    }
                }
            }
        }

        button.win-command:enabled:hover {
            background-color: @commandHoverBackgroundColor;
            color: @textColor;
        }

        button.win-command:enabled:hover:active {
            background-color: @commandActiveBackgroundColor;
        }

        button[aria-checked=true].win-command:hover,
        button[aria-checked=true].win-command:hover:active {
            background-color: transparent;
        }

        button[aria-checked=true].win-command:hover:after {
            opacity:0.8;
        }

        button[aria-checked=true].win-command:hover:active:after {
            opacity:1;
        }
    }
}

.Colors(@theme) {
    #win-overlay > .stylesForTheme(@theme);
}

.ColorsHover(@theme) {
    #win-overlay > .stylesForThemeHover(@theme);
}

.HighContrast() {
    #win-overlay > .stylesForTheme(highcontrast);
}

.HighContrastHover() {
    #win-overlay > .stylesForThemeHover(highcontrast);
}